model
{

	###### Hierarchical GAM model with additional random year-effects
	####  new priors for many parameters, and new basis function for smooth
	#### most variance priors now set as half-normal or half-t distributions on SD
	#### new basis function from mgcv package, using same basis that is default in
	#### brms and rstanarm,
	#### also now has separate variance terms for each set of nknots beta parameters


	for( k in 1 : ncounts )
	{
		Eloglambda[k] <- obs[strat[k],obser[k]] + eta*firstyr[k] + strata[strat[k]] + smooth[strat[k],year[k]] + yeareffect[strat[k],year[k]]
	 	loglambda[k] ~ dnorm(Eloglambda[k], taunoise)
	 	log(lambda[k]) <- loglambda[k]
		count[k] ~ dpois(lambda[k])


	}



	### fixed effect priors

   sdnoise ~ dt(0, 1, 3) T(0,)
   taunoise <- 1 / pow(sdnoise, 2)

	eta ~ dnorm( 0,1)
	STRATA ~ dnorm( 0,1)
	sdstrata ~ dt(0, 1, 3) T(0,)
	taustrata <- 1/pow(sdstrata,2)

  sdobs ~ dnorm(0,4) T(0,)
  tauobs <- 1/pow(sdobs, 2)
	mulogtauyeareffect ~ dnorm(0.0,2)
	taulogtauyeareffect ~ dgamma(2,0.2)

	#### stratum-level effects  ######
	for( i in 1 : nstrata )
	{
		#### observer effects  ######

		for( o in 1 : nobservers[i] )
		{

			obs[i,o] ~ dnorm(0.0, tauobs)
		}

		#### end observer effects  ######


		### stratum-level priors


		strata[i] ~ dnorm(STRATA,taustrata)
	  sdbeta[i] ~ dgamma(2,1)#
	  taubeta[i] <- 1/(pow(sdbeta[i],2))
	}# end s strata loop and stratum-level effects




	###########COMPUTING GAMs for smooths##############
  sdBETA ~ dgamma(2,1)#
  tauBETA <- 1/pow(sdBETA,2) #
  #### instead of hierarchical centering of the betas, this approach
  #### fits a global smooth
  #### the stratum smooth is an additive function of the global smooth
  #### plus and an additional stratum-level smooth


	for(k in 1:nknots)
	{
	  BETA[k] ~ dnorm(0,tauBETA)

	  for(t in ymin:ymax){
    SMOOTH.part[k,t] <- BETA[k]*(X.basis[t,k])
    }
		for(i in 1:nstrata)
		{
	    beta[i,k] ~ dnorm(0,taubeta[i])


			for ( t in ymin : ymax )
			{
				X.part[i,k,t] <- beta[i,k]*(X.basis[t,k])
			}#t
		}#i
	}#k

	  for(t in ymin:ymax){
    SMOOTH[t] <- sum(SMOOTH.part[1:nknots,t])
    }

		for(i in 1:nstrata)
		{
		for (t in ymin : ymax )
	{
			smooth[i,t] <- sum(X.part[i,1:nknots,t]) + SMOOTH[t]
		}#t
	}#i


	#-------------------------------------------------#


	#### additional random year effects  ######


		for( i in 1 : nstrata )
    {
	for( t in ymin : ymax )
		{
			yeareffect[i,t] ~ dnorm(0,tauyeareffect[i])
		}
	#	sdyeareffect[i] ~ dgamma(2,2)
   # tauyeareffect[i] <- 1/pow(sdyeareffect[i],2)
   log(tauyeareffect[i]) <- logtauyeareffect[i]
			logtauyeareffect[i] ~ dnorm(mulogtauyeareffect,taulogtauyeareffect)
		sdyeareffect[i] <- 1/pow(tauyeareffect[i],0.5)

	}





	#### summary statistics  ######
	sdn_ret <- 0.5*sdnoise*sdnoise
	sdobs_ret <- 0.5*sdobs*sdobs

	for( i in 1 : nstrata )
	{
	 sdyeareffect_ret[i] <- 0.5*sdyeareffect[i]*sdyeareffect[i]

		for( t in ymin : ymax )
		{
			for(o in 1 : nobservers[i])
			{
				no[i,t,o] <- exp(strata[i]+smooth[i,t] + yeareffect[i,t] + obs[i,o] + sdn_ret)
				nsmootho[i,t,o] <- exp(strata[i]+smooth[i,t] + obs[i,o] + sdn_ret + sdyeareffect_ret[i])
			}

			mn[i,t] <- mean(no[i,t,(1 : nobservers[i])])
			mnsmooth[i,t] <- mean(nsmootho[i,t,(1 : nobservers[i])])
			n[i,t] <- nonzeroweight[i]*(mn[i,t])
			nsmooth[i,t] <- nonzeroweight[i]*(mnsmooth[i,t])

			n2[i,t] <- nonzeroweight[i]*exp(strata[i]+smooth[i,t] + yeareffect[i,t] + sdn_ret + sdobs_ret) #n2 is an alternative way of calculating n
			nsmooth2[i,t] <- nonzeroweight[i]*exp(strata[i]+smooth[i,t] + sdn_ret + sdobs_ret + sdyeareffect_ret[i]) #n4 is an alternative way of calculating nsmooth
		}
	}


	#-------------------------------------------------#
}
