% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stratify.R
\name{stratify}
\alias{stratify}
\title{Stratify and filter Breeding Bird Survey data}
\usage{
stratify(
  by,
  species,
  strata_custom = NULL,
  combine_species_forms = TRUE,
  release = 2022,
  sample_data = FALSE,
  return_omitted = FALSE,
  quiet = FALSE,
  lump_species_forms,
  bbs_data
)
}
\arguments{
\item{by}{Character. Stratification type. Either an established type, one of
"prov_state", "bcr", "latlong", "bbs_cws", "bbs_usgs", or a custom name
(see \code{strata_custom} for details).}

\item{species}{Character. Bird species of interest. Can be specified by
English, French, or Scientific names, or AOU code. Use \code{search_species()}
for loose matching to find the exact name/code needed.}

\item{strata_custom}{(\code{sf}) Data Frame. Data frame
of modified existing stratification, or a \code{sf} spatial data frame with
polygons defining the custom stratifications. See Details.}

\item{combine_species_forms}{Logical. Whether to combine ambiguous species
forms. Default \code{TRUE}. See Details.}

\item{release}{Numeric. Which yearly release to use, 2022 (including data
through 2021 field season) or 2020 (including data through 2019). Default
2022.}

\item{sample_data}{Logical. Use sample data (just Pacific Wrens). Default
\code{FALSE}.}

\item{return_omitted}{Logical. Whether or not to return a data frame of
route-years which were omitted during stratification as they did not
overlap with any stratum. For checking and troubleshooting. Default
\code{FALSE}.}

\item{quiet}{Logical. Suppress progress messages? Default \code{FALSE}.}

\item{lump_species_forms}{Deprecated. Use \code{combine_species_forms} instead}

\item{bbs_data}{Defunct.}
}
\value{
List of (meta) data.
\itemize{
\item \code{meta_data} meta data defining the analysis
\item \code{meta_strata} contains a data frame listing strata names and area for all
strata relevant to the data (i.e. some may have been removed due to lack
of count data). Contains at least \code{strata_name} (the label of the
stratum), and \code{area_sq_km} (area of the stratum).
\item \code{birds_strata} contains stratified count-level data filtered by species
\item \code{routes_strata} contains stratified route-level data filtered by species
}
}
\description{
Assign count data to strata and filter by species of interest. Routes are
assigned to strata based on their geographic location and the stratification
specified by the user. Species are filtered by matching English, French or
Scientific names to those in the BBS species data (see \code{search_species()} for
a flexible search to identify correct species names).
}
\details{
To define a custom subset of an existing stratification, specify the
stratification in \code{by} (e.g., "bbs_cws") and then supply a subset of
\code{bbs_strata[["bbc_cws"]]} to \code{strata_custom} (see examples).

To define a completely new custom stratification, specify the name you
would like use in \code{by} (e.g., "east_west_divide") and then supply a spatial
data frame with polygons identifying the different strata to
\code{strata_custom}. Note that this data must have a column called
\code{strata_name} which names all the strata contained (see examples).

If \code{combine_species_forms} is \code{TRUE} (default), species with multiple forms
(e.g., "unid. Dusky Grouse / Sooty Grouse") are included in overall species
groupings (i.e., "unid." are combined with "Dusky Grouse" and "Sooty
Grouse" into "Blue Grouse (Dusky/Sooty)"). If the user wishes to keep the
forms separate, \code{combine_species_forms} can be set to \code{FALSE}. See the data
frame \code{species_forms}, for which species are set to be combined with which
other species.

See \code{vignette("stratification", package = "bbsBayes")} and the article
\href{https://steffilazerte.ca/bbsBayes/articles/custom_stratification.html}{custom stratification}
for more details.
}
\examples{

# Sample Data - USGS BBS strata
s <- stratify(by = "bbs_usgs", sample_data = TRUE)

# Full data - species and stratification
# Use `search_species()` to get correct species name

# Stratify by CWS BBS strata
s <- stratify(by = "bbs_cws", species = "Common Loon")

# Use use English, French, Scientific, or AOU codes for species names
s <- stratify(by = "bbs_cws", species = "Plongeon huard")
s <- stratify(by = "bbs_cws", species = 70)
s <- stratify(by = "bbs_cws", species = "Gavia immer")

# Stratify by Bird Conservation Regions
s <- stratify(by = "bcr", species = "Great Horned Owl")

# Stratify by CWS BBS strata
s <- stratify(by = "bbs_cws", species = "Canada Jay")

# Stratify by State/Province/Territory only
s <- stratify(by = "prov_state", species = "Common Loon")
s <- stratify(by = "prov_state", species = "Plongeon huard")
s <- stratify(by = "prov_state", species = 70)


# Stratify by blocks of 1 degree of latitude X 1 degree of longitude
s <- stratify(by = "latlong", species = "Snowy Owl")

# Check routes omitted by stratification
s <- stratify(by = "latlong", species = "Snowy Owl", return_omitted = TRUE)
s[["routes_omitted"]]

# Use combined or non-combined species forms

search_species("Sooty grouse")
s <- stratify(by = "bbs_usgs", species = "Blue Grouse (Dusky/Sooty)")
nrow(s$birds_strata) # Contains all Dusky, Sooty and unidentified

search_species("Sooty grouse", combine_species_forms = FALSE)
s <- stratify(by = "bbs_usgs", species = "unid. Dusky Grouse / Sooty Grouse",
              combine_species_forms = FALSE)
nrow(s$birds_strata) # Contains *only* unidentified


# Stratify by a subset of an existing stratification
library(dplyr)
my_cws <- filter(bbs_strata[["bbs_cws"]], country_code == "CA")
s <- stratify(by = "bbs_cws", strata_custom = my_cws, species = "Snowy Owl")

my_bcr <- filter(bbs_strata[["bcr"]], strata_name == "BCR8")
s <- stratify(by = "bcr", strata_custom = my_bcr,
              species = "Yellow-rumped Warbler (all forms)")

# Stratify by Custom stratification, using sf map object
# e.g. with WBPHS stratum boundaries 2019
# available: https://ecos.fws.gov/ServCat/Reference/Profile/142628

\dontrun{
map <- sf::read_sf("../WBPHS_Stratum_Boundaries_2019") \%>\%
  rename(strata_name = STRAT) # stratify expects this column

s <- stratify(by = "WBPHS_2019", strata_map = map)
}



}
